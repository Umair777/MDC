head	1.5;
access;
symbols;
locks
	anmolzehra:1.5; strict;
comment	@ * @;


1.5
date	2017.07.19.18.43.04;	author anmolzehra;	state Exp;
branches;
next	1.4;

1.4
date	2017.07.19.17.48.45;	author anmolzehra;	state Exp;
branches;
next	1.3;

1.3
date	2017.07.19.17.47.11;	author anmolzehra;	state Exp;
branches;
next	1.2;

1.2
date	2017.07.09.18.57.13;	author anmolzehra;	state Exp;
branches;
next	1.1;

1.1
date	2017.07.09.16.59.58;	author anmolzehra;	state Exp;
branches;
next	;


desc
@@


1.5
log
@made variables unsigned
@
text
@#include"header.h"
#include"declarations.h"
int decompress3(int cfd,char *ekey)
{
	unsigned char c,b,ch;
	unsigned int i,dfd;
	printf("%s:Begin\n",__func__);
	printf("Enter the decompression file\n");
	dfd = openfile("O_WRONLY");
	while(1)
	{
	read(cfd,&ch,1);
	c=ch;
	c >>= 5;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);

	c=ch;
	c <<= 3;
	c >>= 5;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);

	c=ch;
	c <<= 6;
	c >>= 5;
	read(cfd,&ch,1);
	b=ch;
	b >>= 7;
	c|=b;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);

	c=ch;
	c <<= 1;
	c >>= 5;	
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);
	
	c=ch;
	c <<= 4;
	c >>= 5;	
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);
	
	c=ch;
	c <<= 7;
	c >>= 5;
	read(cfd,&ch,1);
	b=ch;
	b >>= 6;
	c|=b;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);
	
	c=ch;
	c <<= 2;
	c >>= 5;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);
	
	c=ch;
	c <<= 5;
	c >>= 5;
	if(c == 0x07)
	{
		break;
	}
	i=(int)c;
	printf("Index is:%d\n",i);
	write(dfd,(ekey+i),1);
	}
	printf("%s:Ends\n",__func__);
}
@


1.4
log
@entered the mode of dfd file descriptor
@
text
@d5 2
a6 2
	char c,b,ch;
	int i,dfd;
@


1.3
log
@code was written in the function
@
text
@d9 1
a9 1
	dfd = openfile();
@


1.2
log
@*** empty log message ***
@
text
@d5 2
d8 100
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
int decompress3()
@
