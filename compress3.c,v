head	1.11;
access;
symbols;
locks
	anmolzehra:1.11; strict;
comment	@ * @;


1.11
date	2017.07.16.09.45.11;	author anmolzehra;	state Exp;
branches;
next	1.10;

1.10
date	2017.07.16.09.35.36;	author anmolzehra;	state Exp;
branches;
next	1.9;

1.9
date	2017.07.15.11.42.21;	author anmolzehra;	state Exp;
branches;
next	1.8;

1.8
date	2017.07.15.11.40.33;	author anmolzehra;	state Exp;
branches;
next	1.7;

1.7
date	2017.07.15.11.35.38;	author anmolzehra;	state Exp;
branches;
next	1.6;

1.6
date	2017.07.15.11.19.40;	author anmolzehra;	state Exp;
branches;
next	1.5;

1.5
date	2017.07.15.09.45.59;	author anmolzehra;	state Exp;
branches;
next	1.4;

1.4
date	2017.07.15.09.39.46;	author anmolzehra;	state Exp;
branches;
next	1.3;

1.3
date	2017.07.15.09.38.43;	author anmolzehra;	state Exp;
branches;
next	1.2;

1.2
date	2017.07.07.10.51.59;	author anmolzehra;	state Exp;
branches;
next	1.1;

1.1
date	2017.07.06.10.45.25;	author anmolzehra;	state Exp;
branches;
next	;


desc
@@


1.11
log
@*** empty log message ***
@
text
@#include"header.h"
#include"declarations.h"
int compress3(int fd,char *ma)
{
	unsigned char c,byt,ch,b;
	int cfd,efd,i;
	printf("%s:Begins\n",__func__);
	printf("Enter the name of Compressed file\n");
	cfd=openfile("O_WRONLY");
	printf("Enter the name of Encryption file\n");
	efd=openfile("O_WRONLY");
	while(1)
	{
	byt^=byt;
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0xE0;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0x1C;
		write(cfd,&byt,1);	
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>=3;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0x03;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>= 6;
	byt=byt|c;
	printf("byt:%d\n",byt);
	write(cfd,&byt,1);
	byt^=byt;
	c^=c;
	if(b == 10)
	{
		byt|=0x80;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(b,ma);
	c=(char)i;
	c <<= 7;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	if(ch== 10)
	{
		byt|=0x70;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>= 1;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0x0E;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>= 4;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0x01;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>= 7;
	byt=byt|c;
	printf("byt:%d\n",byt);
	write(cfd,&byt,1);
	byt^=byt;
	c^=c;
	if(b == 10)
	{
		byt|=0xC0;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(b,ma);
	c=(char)i;
	c <<= 6;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	b=ch;
	if(ch== 10)
	{
		byt|=0x38;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	c <<= 5;
	c >>= 2;
	byt=byt|c;
	printf("byt:%d\n",byt);
	c^=c;
	read(fd,&ch,1);
	if(ch== 10)
	{
		byt|=0x07;
		write(cfd,&byt,1);
		break;
	}
	i=findindex(ch,ma);
	printf("Index of %c is:%d\n",ch,i);
	c=(char)i;
	byt=byt|c;		
	printf("byt:%d\n",byt);
	write(cfd,&byt,1);
	}
	write(efd,ma,strlen(ma));
	printf("%s:End\n",__func__);
}
@


1.10
log
@added eof
@
text
@d90 1
a90 1
	printf("byt:%d",byt);
@


1.9
log
@*** empty log message ***
@
text
@d17 1
d20 2
a21 1
		
a26 1
	b=c;
d32 1
d35 2
a41 1
	b=c;
d48 1
d51 2
a57 1
	b=c;
d65 7
a71 1
	c=b;
a72 1
	b=c;
d80 2
a86 1
	b=c;
d93 1
d96 2
a102 1
	b=c;
d109 1
d112 2
a118 1
	b=c;
d126 8
a133 1
	c=b;
d139 1
d142 2
a148 1
	b=c;
d157 2
a163 1
	b=c;
@


1.8
log
@*** empty log message ***
@
text
@d143 1
a143 1
	
@


1.7
log
@*** empty log message ***
@
text
@d5 1
a5 1
	char c,byt,ch,b;
@


1.6
log
@*** empty log message ***
@
text
@d19 1
d23 1
a23 1
	printf("Index of %c is:%d",ch,i);
d28 1
a28 1
	printf("byt:%d",byt);
d36 1
a36 1
	printf("Index of %c is:%d",ch,i);
d42 1
a42 1
	printf("byt:%d",byt);
d50 1
a50 1
	printf("Index of %c is:%d",ch,i);
d56 1
a56 1
	printf("byt:%d",byt);
d65 1
a65 1
	printf("byt:%d",byt);
d73 1
a73 1
	printf("Index of %c is:%d",ch,i);
d87 1
a87 1
	printf("Index of %c is:%d",ch,i);
d93 1
a93 1
	printf("byt:%d",byt);
d101 1
a101 1
	printf("Index of %c is:%d",ch,i);
d107 1
a107 1
	printf("byt:%d",byt);
d114 1
a114 1
	printf("byt:%d",byt);
d122 1
a122 1
	printf("Index of %c is:%d",ch,i);
d128 1
a128 1
	printf("byt:%d",byt);
d136 1
a136 1
	printf("Index of %c is:%d",ch,i);
d140 1
a140 1
	printf("byt:%d",byt);
@


1.5
log
@Entered \n in printf statement
@
text
@d5 1
a5 1
	char c,byt,ch;
d7 1
a7 1
	printf("%s:Begins",__func__);
a11 1
	c ^= c;
d15 1
d23 118
d143 1
a143 1
	printf("%s:End",__func__);
@


1.4
log
@passing correct arguement in findindex func .
@
text
@d8 1
a8 1
	printf("Enter the name of Compressed file");
d10 1
a10 1
	printf("Enter the name of Encryption file");
@


1.3
log
@creation of compress3 func
@
text
@d21 1
a21 1
	i=findindex(ch);
@


1.2
log
@*** empty log message ***
@
text
@d5 21
a25 2
printf("%s:Begins",__func__);
printf("%s:End",__func__);
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
int compress3()
@
